[{"/Users/Alexandra/dev/finalProject/react-app/repairo/src/index.js":"1","/Users/Alexandra/dev/finalProject/react-app/repairo/src/App.js":"2","/Users/Alexandra/dev/finalProject/react-app/repairo/src/reportWebVitals.js":"3","/Users/Alexandra/dev/finalProject/react-app/repairo/src/components/LogIn.component.js":"4","/Users/Alexandra/dev/finalProject/react-app/repairo/src/components/SingUp.component.js":"5","/Users/Alexandra/dev/finalProject/react-app/repairo/src/service/ApiService.js":"6","/Users/Alexandra/dev/finalProject/react-app/repairo/src/HttpCommon.js":"7","/Users/Alexandra/dev/finalProject/react-app/repairo/src/components/repair_order/UpdateRepairOrder.js":"8","/Users/Alexandra/dev/finalProject/react-app/repairo/src/components/repair_order/ListRepairOrders.js":"9","/Users/Alexandra/dev/finalProject/react-app/repairo/src/components/repair_order/AddRepairOrder.js":"10","/Users/Alexandra/dev/finalProject/react-app/repairo/src/components/client/ListClient.js":"11","/Users/Alexandra/dev/finalProject/react-app/repairo/src/service/ClientService.js":"12","/Users/Alexandra/dev/finalProject/react-app/repairo/src/HttpClient.js":"13","/Users/Alexandra/dev/finalProject/react-app/repairo/src/components/client/AddClient.js":"14","/Users/Alexandra/dev/finalProject/react-app/repairo/src/components/Home.js":"15","/Users/Alexandra/dev/finalProject/react-app/repairo/src/components/Services.js":"16","/Users/Alexandra/dev/finalProject/react-app/repairo/src/components/client/UpdateClient.js":"17"},{"size":267,"mtime":1610201814000,"results":"18","hashOfConfig":"19"},{"size":4208,"mtime":1610391627000,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1608541261000,"results":"21","hashOfConfig":"19"},{"size":901,"mtime":1610214752000,"results":"22","hashOfConfig":"19"},{"size":1289,"mtime":1609446789000,"results":"23","hashOfConfig":"19"},{"size":1141,"mtime":1610381802000,"results":"24","hashOfConfig":"19"},{"size":158,"mtime":1610274498000,"results":"25","hashOfConfig":"19"},{"size":5649,"mtime":1610381684000,"results":"26","hashOfConfig":"19"},{"size":8259,"mtime":1610277672000,"results":"27","hashOfConfig":"19"},{"size":11593,"mtime":1610277669000,"results":"28","hashOfConfig":"19"},{"size":5286,"mtime":1610391825000,"results":"29","hashOfConfig":"19"},{"size":577,"mtime":1610386911000,"results":"30","hashOfConfig":"19"},{"size":158,"mtime":1610216757000,"results":"31","hashOfConfig":"19"},{"size":3723,"mtime":1610269553000,"results":"32","hashOfConfig":"19"},{"size":209,"mtime":1610214942000,"results":"33","hashOfConfig":"19"},{"size":225,"mtime":1610269975000,"results":"34","hashOfConfig":"19"},{"size":10994,"mtime":1610466475000,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1fipxxz",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":3,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},"/Users/Alexandra/dev/finalProject/react-app/repairo/src/index.js",[],["74","75"],"/Users/Alexandra/dev/finalProject/react-app/repairo/src/App.js",[],"/Users/Alexandra/dev/finalProject/react-app/repairo/src/reportWebVitals.js",[],["76","77"],"/Users/Alexandra/dev/finalProject/react-app/repairo/src/components/LogIn.component.js",[],"/Users/Alexandra/dev/finalProject/react-app/repairo/src/components/SingUp.component.js",[],["78","79"],"/Users/Alexandra/dev/finalProject/react-app/repairo/src/service/ApiService.js",[],"/Users/Alexandra/dev/finalProject/react-app/repairo/src/HttpCommon.js",[],"/Users/Alexandra/dev/finalProject/react-app/repairo/src/components/repair_order/UpdateRepairOrder.js",[],"/Users/Alexandra/dev/finalProject/react-app/repairo/src/components/repair_order/ListRepairOrders.js",[],"/Users/Alexandra/dev/finalProject/react-app/repairo/src/components/repair_order/AddRepairOrder.js",[],"/Users/Alexandra/dev/finalProject/react-app/repairo/src/components/client/ListClient.js",[],"/Users/Alexandra/dev/finalProject/react-app/repairo/src/service/ClientService.js",[],"/Users/Alexandra/dev/finalProject/react-app/repairo/src/HttpClient.js",[],"/Users/Alexandra/dev/finalProject/react-app/repairo/src/components/client/AddClient.js",[],"/Users/Alexandra/dev/finalProject/react-app/repairo/src/components/Home.js",[],"/Users/Alexandra/dev/finalProject/react-app/repairo/src/components/Services.js",[],"/Users/Alexandra/dev/finalProject/react-app/repairo/src/components/client/UpdateClient.js",["80","81","82","83"],"// import React, { Component } from 'react'\n\n// import ClientService from '../../service/ClientService';\n\n// class UpdateClient extends Component {\n\n//     constructor(props){\n//         super(props);\n\n//         this.state ={\n//             clientId: this.props.match.params.id,\n//             clientFirstName: '',\n//             clientLastName: '',\n//             clientPhoneNumber: '',\n//         }\n//         this.changeFirstNameHandler= this.changeFirstNameHandler.bind(this);\n//         this.changeLastNameHandler=this.changeLastNameHandler.bind(this);\n//         this.changePhoneNumberHandler= this.changePhoneNumberHandler.bind(this);\n//         this.updateClient= this.updateClient.bind(this);\n//         this.saveClient = this.saveClient.bind(this);\n//         this.loadClient = this.loadClient.bind(this);\n//     }\n\n//     componentDidMount() {\n//         this.loadClient();\n//     }\n\n//     loadClient(clientId) {\n//         ClientService.get(clientId)\n//             .then((res) => {\n//                 let client = res.data.result;\n//                 this.setState({\n//                 clientId: client.clientId,\n//                 clientFirstName: client.clientFirstName,\n//                 clientLastName: client.clientLastName,\n//                 clientPhoneNumber: client.clientPhoneNumber,\n//                 })\n//             });\n//     }\n\n//     onChange = (e) =>\n//         this.setState({ [e.target.clientFirstName]: e.target.value });\n\n//     saveClient = (e) => {\n//         e.preventDefault();\n//         let client = {clientId: this.state.clientId, clientFirstName: this.state.clientFirstName, clientLastName: this.state.clientLastName, clientPhoneNumber: this.state.clientPhoneNumber};\n//         ClientService.update(client)\n//             .then(res => {\n//                 this.setState({message : 'Client updated successfully.'});\n//                 this.props.history.push('/clients/update');\n//             });\n//     }\n\n//    updateClient = (e) => {\n//        e.preventDefault();\n//        let client = {clientId: this.state.clientId,\n//            clientFirstName: this.state.clientFirstName,\n//                         clientLastName: this.state.clientLastName,\n//                         clientPhoneNumber: this.state.clientPhoneNumber,\n// };\n\n//         console.log('client => ' + JSON.stringify(client));\n//         console.log('id =>' + JSON.stringify(this.state.clientId));\n//         ClientService.update(client, this.state.clientId).then( res => {\n//             this.props.history.push('/clients');\n//         });\n//    }\n\n//    changeFirstNameHandler= (event) => {\n//        this.setState({clientFirstName: event.target.value});\n//    }\n\n//    changeLastNameHandler= (event) => {\n//        this.setState({clientLastName: event.target.value});\n//    }\n\n//    changePhoneNumberHandler= (event) => {\n//        this.setState({clientPhoneNumber: event.target.value});\n//    }\n\n  \n\n//    cancel(){\n//        this.props.history.push('/clients');\n//    }\n\n//     render() {\n//         return (\n//             <div>\n//             <br></br>\n//                <div className = \"container\">\n//                     <div className = \"row\">\n//                         <div className = \"card col-md-6 offset-md-3 offset-md-3\">\n//                             <h3 className=\"text-center\">Update Client </h3>\n//                             <div className = \"card-body\">\n//                                 <form>\n//                                     <div className = \"form-group\">\n//                                         <label> Client's first name: </label>\n//                                         <input placeholder=\"First Name\" name=\"clientFirstName\" className=\"form-control\" \n//                                             value={this.state.clientFirstName} onChange={this.changeFirstNameHandler}/>\n//                                     </div>\n//                                     <div className = \"form-group\">\n//                                         <label> Client's last Name: </label>\n//                                         <input placeholder=\"Last Name\" name=\"clientLastName\" className=\"form-control\" \n//                                             value={this.state.clientLastName} onChange={this.changeLastNameHandler}/>\n//                                     </div>\n//                                     <div className = \"form-group\">\n//                                         <label> Client's phone number </label>\n//                                         <input placeholder=\"Phone number\" name=\"clientPhoneNumber\" className=\"form-control\" \n//                                             value={this.state.clientPhoneNumber} onChange={this.changePhoneNumberHandler}/>\n//                                     </div>\n                                \n\n//                                     {/* <button className=\"btn btn-success\" onClick={this.updateClient}>Save</button> */}\n//                                     <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\n//                                     <button className=\"btn btn-success\" onClick={this.saveClient}>Save</button>\n//                                 </form>\n//                             </div>\n//                         </div>\n//                     </div>\n\n//                </div>\n//         </div>\n//     );\n//     }\n// }\n\n// export default UpdateClient \n\n    \nimport React, { Component} from 'react';\nimport { Container, Button, Form, Input, Label, FormGroup } from \"reactstrap\";\nimport axios from \"axios\";\nimport ClientService from '../../service/ClientService';\n\nclass UpdateClient extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clientId: this.props.match.params.id,\n      isLoading:true,\n     clientFirstName:\"\",\n     clientLastName:\"\",\n     clientPhoneNumber:\"\"\n    };\n\n    this.changeClientFirstNameHandler = this.changeClientFirstNameHandler.bind(this);\n    this.changeClientLastNameHandler = this.changeClientLastNameHandler.bind(this);\n    this.changeClientPhoneNumberHandler = this.changeClientPhoneNumberHandler.bind(this);\n    this.updateClient = this.updateClient.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  async componentDidMount() {\n     const responseCategory = await fetch(\n      \"http://localhost:8080/api/clients\"\n    );\n    const bodyCategory = await responseCategory.json();\n    this.setState({\n      categories: bodyCategory,\n      isLoading: false,\n    });\n     ClientService.get(this.props.match.params.id).then(\n       (response) => {\n         this.setState({\n           clientFirstName: response.data.clientFirstName,\n           clientLastName: response.data.clientLastName,\n           clientPhoneNumber: response.data.clientPhoneNumber,\n           isLoading: false,\n         });\n       }\n     );\n  }\n  updateClient(newClient)  {\n    let client = {\n     clientFirstName: this.state.clientFirstName,\n     clientLastName: this.state.clientLastName,\n     clientPhoneNumber: this.state.clientPhoneNumber,\n   }\n    console.log('client =>' + JSON.stringify(client));\n    console.log(\"id => \" +JSON.stringify(this.state.clientId));\n    ClientService.update(client,this.state.clientId)\n      .then((response) => {\n       this.props.history.push(\"/clients\");\n    });\n}\n   onSubmit(e) {\n   e.preventDefault();\n   const newClient = {\n    clientFirstName: this.state.clientFirstName,\n    clientLastName: this.state.clientLastName,\n    clientPhoneNumber: this.state.clientPhoneNumber\n  }\n     axios.put(\"http://localhost:3000/clients/\" + this.props.match.params.id,client)\n    .then(res => console.log(res.data));\n    // this.editRecipe(newRecipe);\n    this.props.history.push(\"/clients\");\n  }\n  changeClientFirstNameHandler = (event) => {\n    this.setState({ clientFirstName: event.target.value });\n  }\n  changeClientLastNameHandler = (event) => {\n    this.setState({ clientLastName: event.target.value });\n  }\n  changeClientPhoneNumberHandler = (event) => {\n    this.setState({ clientPhoneNumber: event.target.value });\n  }\n//   changeCategoryHandler(event) {\n//     const target = event.target;\n//     const value = target.value;\n//     const name = target.name;\n//     let recipe = { ...this.state.recipe };\n//     recipe[name] = JSON.parse(value);\n//     this.setState({ recipe });\n//   }\n  cancel() {\n    this.props.history.push(\"/clients\");\n  }\n  render() {\n    const title = (\n      <h3\n        className=\"pt-2\"\n        style={{ display: \"flex\", justifyContent: \"center\" }}\n      >\n        Update Client\n      </h3>\n    );\n    const { clients, isLoading } = this.state;\n    if (isLoading) {\n      return <div>Loading...</div>;\n    }\n    let optionList = clients.map((client) => (\n      <option value={JSON.stringify(client)} id={client.clientId}>\n        {client.clientFirstName}\n      </option>\n    ));\n    return (\n      <div className=\"Site\">\n        <AppNav />\n        <div className=\"Home-image\"></div>\n        <Container className=\"Site-content\">\n          {title}\n          <Form onSubmit={this.onSubmit.bind(this)}>\n            <Button\n              className=\"btn btn-danger\"\n              onClick={this.cancel.bind(this)}\n              style={{ marginLeft: \"10px\" }}\n            >\n              Back\n            </Button>\n            <FormGroup>\n              <Label for=\"clientFirstName\">First Name</Label>\n              <Input\n                type=\"name\"\n                name=\"clientFirstName\"\n                id=\"clientFirstName\"\n                value={this.state.clientFirstName}\n                onChange={this.changeClientFirstNameHandler}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"clientLastName\">Last name</Label>\n              <Input\n                className=\"mt-2 ml-2\"\n                type=\"name\"\n                name=\"clientLastName\"\n                id=\"clientLastName\"\n                value={this.state.clientLastName}\n                onChange={this.changeClientLastNameHandler}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"clientPhoneNumber\">Phone number</Label>\n              <select\n                name=\"phoneNumber\"\n                id=\"clientPhoneNumber\"\n                value={JSON.stringify(this.state.clientPhoneNumber)}\n                onChange={this.changeClientPhoneNumberHandler}\n              >\n                {optionList}\n              </select>\n            </FormGroup>\n            <FormGroup>\n              <Button size=\"sm\" color=\"primary\" onClick={this.updateClient}>\n                Save\n              </Button>\n              <Button\n                size=\"sm\"\n                className=\"ml-1\"\n                color=\"secondary\"\n                onClick={this.cancel.bind(this)}\n              >\n                Cancel\n              </Button>\n            </FormGroup>\n          </Form>\n        </Container>\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default UpdateClient;\n   \n",{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"84","replacedBy":"88"},{"ruleId":"86","replacedBy":"89"},{"ruleId":"84","replacedBy":"90"},{"ruleId":"86","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":188,"column":10,"nodeType":"94","messageId":"95","endLine":188,"endColumn":19},{"ruleId":"96","severity":2,"message":"97","line":193,"column":78,"nodeType":"94","messageId":"98","endLine":193,"endColumn":84},{"ruleId":"99","severity":2,"message":"100","line":238,"column":10,"nodeType":"101","endLine":238,"endColumn":16},{"ruleId":"99","severity":2,"message":"102","line":297,"column":10,"nodeType":"101","endLine":297,"endColumn":16},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],["103"],["104"],["103"],["104"],"no-unused-vars","'newClient' is assigned a value but never used.","Identifier","unusedVar","no-undef","'client' is not defined.","undef","react/jsx-no-undef","'AppNav' is not defined.","JSXIdentifier","'Footer' is not defined.","no-global-assign","no-unsafe-negation"]